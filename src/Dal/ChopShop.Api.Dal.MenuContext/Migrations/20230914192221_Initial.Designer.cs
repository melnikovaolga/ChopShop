// <auto-generated />
using System;
using ChopShop.Api.Dal.Postgres;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;

#nullable disable

namespace ChopShop.Api.Dal.Postgres.Migrations
{
    [DbContext(typeof(MenuContext.MenuContext))]
    [Migration("20230914192221_Initial")]
    partial class Initial
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.22")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.Entity("ChopShop.Api.Dal.MenuContext.Models.Dish", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<int>("Availability")
                        .HasColumnType("integer");

                    b.HasKey("Id");

                    b.ToTable("Dish", (string)null);
                });

            modelBuilder.Entity("ChopShop.Api.Dal.MenuContext.Models.DishName", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<Guid>("DishId")
                        .HasColumnType("uuid");

                    b.Property<int>("Language")
                        .HasColumnType("integer");

                    b.Property<string>("Value")
                        .IsRequired()
                        .HasMaxLength(60)
                        .HasColumnType("character varying(60)");

                    b.HasKey("Id");

                    b.HasIndex("DishId");

                    b.ToTable("DishName", (string)null);
                });

            modelBuilder.Entity("ChopShop.Api.Dal.MenuContext.Models.DishPrice", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<int>("Currency")
                        .HasColumnType("integer");

                    b.Property<Guid>("DishId")
                        .HasColumnType("uuid");

                    b.Property<decimal>("Value")
                        .HasColumnType("numeric");

                    b.HasKey("Id");

                    b.HasIndex("DishId");

                    b.ToTable("DishPrice", (string)null);
                });

            modelBuilder.Entity("ChopShop.Api.Dal.MenuContext.Models.DishName", b =>
                {
                    b.HasOne("ChopShop.Api.Dal.MenuContext.Models.Dish", "Dish")
                        .WithMany("Names")
                        .HasForeignKey("DishId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Dish");
                });

            modelBuilder.Entity("ChopShop.Api.Dal.MenuContext.Models.DishPrice", b =>
                {
                    b.HasOne("ChopShop.Api.Dal.MenuContext.Models.Dish", "Dish")
                        .WithMany("Prices")
                        .HasForeignKey("DishId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Dish");
                });

            modelBuilder.Entity("ChopShop.Api.Dal.MenuContext.Models.Dish", b =>
                {
                    b.Navigation("Names");

                    b.Navigation("Prices");
                });
#pragma warning restore 612, 618
        }
    }
}
